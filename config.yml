# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs
jobs:
  create_infrastructure:
    docker:
      - image: circleci/aws-cli@2.0.3
    steps: 
      - checkout
      - aws-cli/setup
      - run:
          name: Ensure backend infrastructure exist
          command: |
            pwd
            ls -la
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name my-stack
workflows:
  version: 2
  do-cool-stuff:
    jobs:
      - create_infrastructure:
          filters:
            branches:
              only: master
              
              
       #code 2
       version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps: 
      - checkout
      - run:
          name: create cloudfront disti
          command: |
            pwd
            ls -la
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID=udacityci.cd \
            --tags project=udapeople &
workflows:
  shine:
    jobs:
       - create_infrastructure:
          filters:
            branches:
              only:
                - CCI-Blue_Green_Deployment
                
       #code 3
 version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
workflows:
  shine:
    jobs:
       - create_and_deploy_front_end
       
#CODE 4
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

jobs:
# Fetch and save the pipeline ID (bucket ID) responsible for the last release.
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Fetch and save the old pipeline ID (bucket name) responsible for the last release.
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/textfile.txt
      - persist_to_workspace:
          root: ~/
          paths: 
            - textfile.txt 
workflows:
  shine:
    jobs:
       - get_last_deployment_id
       
#code 5
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

jobs:
# Executes the cloudfront.yml template that will modify the existing CloudFront Distribution, change its target from the old bucket to the new bucket - `mybucket-${CIRCLE_WORKFLOW_ID:0:7}`. 
# Notice here we use the stack name `production-distro` which is the same name we used while deploying to the S3 bucket manually.
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file template.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}" 
workflows:
  shine:
    jobs:
       - promote_to_production
          
